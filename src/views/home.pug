mixin course-basket(myCourse)
	li.list-group-item(data-fos="#{myCourse.FOS}" data-coursenum="#{myCourse.CourseNum}" data-coursename="#{myCourse.Title}"
	data-displaytitle="#{myCourse.DisplayTitle}")
		| #{myCourse.FOS} #{myCourse.CourseNum} | #{myCourse.DisplayTitle}
		button.btn.btn-danger.glyphicon.glyphicon-minus.btn-remove-course.pull-right(type="button" style="line-height: 1!important;"
		data-coursenum="#{myCourse.CourseNum}" data-fos="#{myCourse.FOS}" data-coursename="#{myCourse.Title}")

extends template.pug
block after_head
	script.
		if(location.hostname !== "localhost" && location.hostname !== "127.0.0.1"){
			(function (i, s, o, g, r, a, m){
				i['GoogleAnalyticsObject'] = r;
				i[r] = i[r] || function (){
						(i[r].q = i[r].q || []).push(arguments)
					}, i[r].l = 1 * new Date();
				a = s.createElement(o),
					m = s.getElementsByTagName(o)[0];
				a.async = 1;
				a.src = g;
				m.parentNode.insertBefore(a, m)
			})(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');
			ga('create', 'UA-4436865-11', 'auto');
			ga('send', 'pageview');
			(function (){
				var t, i, e, n = window, o = document, a = arguments, s = "script",
					r = ["config", "track", "identify", "visit", "push", "call", "trackForm", "trackClick"],
					c = function (){
						var t, i = this;
						for(i._e = [], t = 0; r.length > t; t++)(function (t){
							i[t] = function (){
								return i._e.push([t].concat(Array.prototype.slice.call(arguments, 0))), i
							}
						})(r[t])
					};
				for(n._w = n._w || {}, t = 0; a.length > t; t++)n._w[a[t]] = n[a[t]] = n[a[t]] || new c;
				i = o.createElement(s), i.async = 1, i.src = "//static.woopra.com/js/w.js", e = o.getElementsByTagName(s)[0], e.parentNode.insertBefore(i, e)
			})("woopra");
			woopra.config({
				domain: 'mikedombrowski.com'
			});
			woopra.track();
		}
block nav
	include homeNav.pug
block content
	link(href="public/css/bootstrap-tour-standalone.min.css" rel="stylesheet")
	script(src="public/js/jquery-ui.min.js" type="text/javascript")
	script(src="public/js/jquery.ui.touch.min.js" type="text/javascript")
	link(href="public/css/bootstrap-toggle.min.css" rel="stylesheet")
	link(rel="stylesheet" type="text/css" href="public/css/jquery-ui.min.css")
	link(rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/jasny-bootstrap/3.1.3/css/jasny-bootstrap.min.css")
	script(src="//cdnjs.cloudflare.com/ajax/libs/jasny-bootstrap/3.1.3/js/jasny-bootstrap.min.js")
	script(src="public/js/bootstrap-toggle.min.js")
	script(src="public/js/bootstrap-tour-standalone.min.js")
	style.
		.navbar-brand-name > img {
			max-height: 70px;
			width: auto;
			padding: 0 15px 0 0;
		}
		.navbar {
			min-height: 90px;
			background-color: #4788c6;
		}
		.navbar-brand {
			min-height: 90px;
			height: auto;
			max-height: 120px;
		}
		.bootstrap-switch .bootstrap-switch-handle-off, .bootstrap-switch .bootstrap-switch-handle-on, .bootstrap-switch .bootstrap-switch-label {
			height: auto;
		}
		.row {
			margin-left: 0px;
			margin-right: 0px;
		}
		label {
			font-weight: bold;
		}

	div.container-fluid#content
		nav#history.navmenu.navmenu-default.navmenu-fixed-left.offcanvas
		div.col-md-12
			div.alert.alert-info(role="alert")
				h4(style="font-size:16px;") Courses Last Updated 4/07/2017. Always check on BannerWeb for the most up to date data.
			div.jumbotron.hide
				h1 Welcome to the Unofficial Richmond Scheduler!
				h2 Schedules for Fall 2017 Now Available
				p Use the search below to find courses and then click the&nbsp;<button class="glyphicon glyphicon-plus btn btn-success" style="line-height:1em!important; vertical-align:text-top;"></button>&nbsp;to add the course to your basket.
				p Then click "Create Schedule" to generate every possible schedule
				p Disclaimer: This product has been developed by Michael Dombrowski it is not owned or operated by the University of Richmond. Accuracy cannot be guaranteed, please contact me if you find any inaccuracies.
				p
					a.btn.btn-primary.btn-success.btn-lg.btn-jumbo-close(role="button") Okay!
			div.page-header(style="margin-top:0px;")
				h2 Make a Schedule
		div.col-md-8
			div.row
				div.panel.panel-default#searchDiv
					div.panel-heading
						h1.panel-title Search for Courses
					div.panel-body
						h5 If searching by course title fails, try field of study and course number, ex CMSC 315
						input#searchField.form-control.search(name="fields[]" type="text" placeholder="Search by name or subject area and course number")
						hr(width="100%")
						div#search-results

			div.row.hidden-sm.hidden-xs
				div.panel.panel-default
					div.panel-heading
						h1.panel-title Browse Courses
					div.panel-body
						div#subj-list
							div.panel.panel-default.hide#subj-list-template
								div.panel-heading.collapse-btn
									h1.panel-title Accounting (ACCT)
								div.panel-collapse.panel-body.collapse.main-body

		div.col-md-4
			div.panel.panel-default
				div.panel-heading
					h1.panel-title Selected Courses
				div.panel-body
					style.
						#course-basket, #course-basket-required {
							border: 1px solid #eee;
							min-height: 20px;
							list-style-type: none;
						}
					p Required Courses
					ul#course-basket-required.list-group.row.connectedSortable
						each myCourse in courses.required
							+course-basket(myCourse)
					p Optional Courses
					ul#course-basket.list-group.row.connectedSortable
						each myCourse in courses.optional
							+course-basket(myCourse)
					script.
						$("#course-basket, #course-basket-required").sortable({connectWith: ".connectedSortable"}).disableSelection();
					div.form-inline
						div.form-group
							label.control-label(for="full-classes") Show Sections at Capacity&nbsp;
							if full_classes
								input#full-classes.form-control(type="checkbox" checked)
							else
								input#full-classes.form-control(type="checkbox")
						div.form-group
							label.control-label(for="time-pref") Class Time Preference&nbsp;
							if time_pref
								input#time-pref.form-control(type="checkbox" checked)
							else
								input#time-pref.form-control(type="checkbox")
					div.form-group
						label.control-label(for="crns") Preregistered Courses
						input#crns.form-control(type="text" name="crns" placeholder="CRNs of Courses Already Registered"
							value="#{preregisteredCRNs}")
					div.form-group
						span#arrow.glyphicon.glyphicon-chevron-right
						a#adv(onclick="advOptions()") Show Advanced Options
					div#advanced
						div.form-group
							label.control-label(for="slider-range") Only Allow Courses Between
							div#slider-range
							span#restrict-slider
						div#block
							div.form-group
								div.form-inline
									div.form-group
										label.control-label(for="block-time-template") Times You Don't Want
									div.form-group.pull-right
										button#add-block-time.form-control.btn.btn-success.glyphicon.glyphicon-plus
						div#block-time-template.hide.blocked-time
							hr
							div.form-group
								div.time-slider
								span.time-display
							div.form-inline
								div.form-group
									div.btn-group(data-toggle='buttons')
										label.btn.btn-primary
											input(type='checkbox', name='Su')
											| Su
										label.btn.btn-primary
											input(type='checkbox', name='M')
											| Mo
										label.btn.btn-primary
											input(type='checkbox', name='T')
											| Tu
										label.btn.btn-primary
											input(type='checkbox', name='W')
											| We
										label.btn.btn-primary
											input(type='checkbox', name='R')
											| Th
										label.btn.btn-primary
											input(type='checkbox', name='F')
											| Fr
										label.btn.btn-primary
											input(type='checkbox', name='S')
											| Sa
								div.form-group
									button.form-control.btn.btn-danger.glyphicon.glyphicon-minus.btn-remove-block-time
						div#history-template.panel.panel-default.hide
							div.panel-heading
								h1.panel-title
								button.btn.btn-success.glyphicon.glyphicon-repeat.pull-right.btn-load-history(type='button', style='line-height: 1!important; margin-top:-22px;')
							div.panel-body
					script.
						$('.btn').button();
						$("#advanced").hide();

						if(getCookie("history").length > 0){
							var c = getCookie("history");
							c = JSON.parse(decodeURIComponent(c));
							console.log(c);
							$.each(c, function(i,v){
									var $cloned = $("#history-template").clone().removeClass("hide").removeAttr('id');
									$cloned.find(".panel-title").text(v["schedules"]+" Schedules");
									var courses = "<ul class='list-group'>";
									$.each(v, function(i2, v2){
										if(v2["Title"] !== undefined){
											courses = courses+"<li class='list-group-item'>"+v2["Title"].replace(/\+/g, " ")+"</li>";
										}
									});
									courses = courses+"</ul>";
									$cloned.find(".panel-body").html(courses);
									$cloned.find(".btn-load-history").attr('data-history-id', i);
									$("#history").prepend($cloned);
							});
						}

						if(getCookie("jumbotron") !== "hidden"){
							$(".jumbotron").removeClass("hide");
						}

						var tour = new Tour({
							backdrop: true,
							debug: true,
							onEnd: function(tour){
								$("#course-basket").find(".btn-remove-course").trigger("click");
							},
							steps: [
								{
									element: "#searchDiv",
									title: "Search for Courses Here",
									content: "Use the search field to find courses by title or by subject and course number",
									onNext: function(tour){
										$(".collapse-btn:eq(1)").trigger("click");
									}
								},
								{
									element: "#subj-list",
									title: "Browse for Courses",
									content: "Click on a subject to see what courses are offered",
									placement: "top",
									onNext: function(tour){
										$(".collapse-btn-subj:eq(0)").trigger("click");
									}
								},
								{
									element: ".collapse-btn-subj:eq(0)",
									title: "View Course Descriptions",
									content: "Click the title to view the course description",
								},
								{
									element: ".btn-add-course:eq(0)",
									title: "Add Course to Selected Courses",
									content: "Once you like a course, click the + button to add it to your selected courses",
									onNext: function(tour){
										$(".btn-add-course:eq(0)").trigger("click");
									}
								},
								{
									element: "#course-basket",
									title: "View Selected Courses",
									content: "Click the - button to remove any courses",
									placement: "left"
								},
								{
									element: ".btn-generate",
									title: "Now Generate Schedules!",
									content: "Click 'Create Schedule' to make every possible schedule",
									placement: "left"
								},
								{
									element: "body",
									title: "Tour Complete",
									content: "Go forth and make your perfect schedule!",
									placement: "top"
								}
							]
						});

						if(!isMobile()){
							tour.init();
							tour.start();
						}

						$(document).on("click", ".btn-load-history", function(e){
						var c = getCookie("history");
						c = JSON.parse(decodeURIComponent(c));
						c = c[$(e.target).data('history-id')];
							$.each(c, function(i, v){
								if(v["Title"] !== undefined){
									if(v["displayTitle"] !== undefined){
										v["displayTitle"] = v["displayTitle"].replace(/\+/g, " ");
									}
									addCourse(v["FOS"], v["CourseNum"], v["Title"].replace(/\+/g, " "), v["displayTitle"]);
								}
							});
						});

						function isMobile() {
							var check = false;
							(function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone | od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
							return check;
						}

						function getCookie(cname) {
							var name = cname + "=";
							var ca = document.cookie.split(';');
							for(var i=0; i<ca.length; i++) {
								var c = ca[i];
								while (c.charAt(0) === ' '){
									c = c.substring(1);
								}
								if (c.indexOf(name) === 0){
									return c.substring(name.length, c.length);
								}
							}
							return "";
						}

						function getParameterByName(name, url) {
							if (!url) url = window.location.href;
							name = name.replace(/[\[\]]/g, "\\$&");
							var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
							results = regex.exec(url);
							if (!results) return null;
							if (!results[2]) return '';
							return decodeURIComponent(results[2].replace(/\+/g, " "));
						}

						if(getParameterByName('i') !== null){
							var importFromURL = JSON.parse(getParameterByName('i'))['unwantedTimes'];
							$.each(importFromURL, function(){
								var $cloned = $("#block-time-template").clone().removeClass("hide").removeAttr('id');
								var d = new Date();
								var now = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0,0,0);

								var time = this["startTime"].split(" ")[0].split(":");
								var ampm = this["startTime"].split(" ")[1];
								d.setHours(parseInt(time[0]) + (ampm==="PM" ? 12 : 0));
								d.setMinutes(parseInt(time[1]) || 0 );
								this["startTime"] = parseInt((d-now)/60000);

								time = this["endTime"].split(" ")[0].split(":");
								ampm = this["endTime"].split(" ")[1];
								d.setHours(parseInt(time[0]) + (ampm==="PM" ? 12 : 0));
								d.setMinutes(parseInt(time[1]) || 0 );
								this["endTime"] = parseInt((d-now)/60000);

								$cloned.find(".time-slider").slider({
									range: true,
									min: 480,
									max: 1320,
									step:15,
									values:[this["startTime"], this["endTime"]],
									slide: slideTime
								});
								setSpanTime($cloned.find(".time-slider"));

								if(this["Su"] !== undefined){
									$cloned.find("input[name='Su']").parent().addClass("active");
									$cloned.find("input[name='Su']").prop('checked', true);
								}
								if(this["M"] !== undefined){
									$cloned.find("input[name='M']").parent().addClass("active");
									$cloned.find("input[name='M']").prop('checked', true);
								}
								if(this["T"] !== undefined){
									$cloned.find("input[name='T']").parent().addClass("active");
									$cloned.find("input[name='T']").prop('checked', true);
								}
								if(this["W"] !== undefined){
									$cloned.find("input[name='W']").parent().addClass("active");
									$cloned.find("input[name='W']").prop('checked', true);
								}
								if(this["R"] !== undefined){
									$cloned.find("input[name='R']").parent().addClass("active");
									$cloned.find("input[name='R']").prop('checked', true);
								}
								if(this["F"] !== undefined){
									$cloned.find("input[name='F']").parent().addClass("active");
									$cloned.find("input[name='F']").prop('checked', true);
								}
								if(this["S"] !== undefined){
									$cloned.find("input[name='S']").parent().addClass("active");
									$cloned.find("input[name='S']").prop('checked', true);
								}

								$("#block").append($cloned);
							});
						}

						$(document).on("click", "#add-block-time", function(){
							var $cloned = $("#block-time-template").clone().removeClass("hide").removeAttr('id');
							$cloned.find(".time-slider").slider({
								range: true,
								min: 480,
								max: 1320,
								step:15,
								values:[480, 600],
								slide: slideTime
							});
							setSpanTime($cloned.find(".time-slider"));
							$("#block").append($cloned);
						});

						$(document).on("click", ".btn-remove-block-time", function(){
							$(this).parent().parent().parent().remove();
						});

						function advOptions(){
							if(!$('#advanced').is(':visible')){
								$('#advanced').show(500); $('#adv').text('Hide Advanced Options');
								$('#arrow').removeClass("glyphicon-chevron-right").addClass("glyphicon-chevron-down");
							}
							else{
								$('#advanced').hide(500); $('#adv').text('Show Advanced Options');
								$('#arrow').removeClass("glyphicon-chevron-down").addClass("glyphicon-chevron-right");
							}
						}

						$("#slider-range").slider({
						range: true,
						min: 480,
						max: 1320,
						step:15,
						values: [#{slider.start}, #{slider.end}],
						slide: slideTime
						});
						setSpanTime($("#slider-range"));

						function slideTime(event, ui){
								var val0 = ui.values[0],
							val1 = ui.values[1],
							minutes0 = parseInt(val0 % 60, 10),
							hours0 = parseInt(val0 / 60 % 24, 10),
							minutes1 = parseInt(val1 % 60, 10),
							hours1 = parseInt(val1 / 60 % 24, 10);

							startTime = getTime(hours0, minutes0);
							endTime = getTime(hours1, minutes1);
							$(event.target).parent().children().last().text(startTime + ' - ' + endTime);
						}

						function setSpanTime($id){
							var val0 = $id.slider("values", 0),
							val1 = $id.slider("values", 1),
							minutes0 = parseInt(val0 % 60, 10),
							hours0 = parseInt(val0 / 60 % 24, 10),
							minutes1 = parseInt(val1 % 60, 10),
							hours1 = parseInt(val1 / 60 % 24, 10);

							startTime = getTime(hours0, minutes0);
							endTime = getTime(hours1, minutes1);
							$id.parent().children().last().text(startTime + ' - ' + endTime);
						}

						function getTime(hours, minutes) {
							var time = null;
							minutes = minutes + "";
							if (hours < 12) {
								time = "AM";
							}
							else {
							time = "PM";
							}
							if (hours === 0) {
								hours = 12;
							}
							if (hours > 12) {
								hours = hours - 12;
							}
							if (minutes.length === 1) {
								minutes = "0" + minutes;
							}
							return hours + ":" + minutes + " " + time;
						}
					div.form-group
					div.form-group
						button.btn.btn-success.btn-generate(type='submit') Create Schedule
	div.container-fluid(style='margin-top:30px;')
		div.col-md-12
			div.well.well-lg(style='text-align:center;')
				h4 Made by
					a(href='http://mikedombrowski.com', style='color:#444444;') &nbsp;Michael Dombrowski
				h5 Code Available on&nbsp;
					a(href='https://github.com/md100play/university-schedule-generator', style='color:#444444;') GitHub
				h5 Feel Free to Contact Me With Issues or Feature Requests at
					a(href='mailto:michael@mikedombrowski.com', style='color:#444444;') &nbsp;Michael@MikeDombrowski.com&nbsp;
						span.glyphicon.glyphicon-envelope(style='vertical-align:top;')
				p.
					Disclaimer: This product has been developed by Michael Dombrowski it is not owned or operated by
					the University of Richmond. I will always try to have the data be kept up to date and accuate, but
					I cannot guarantee effectiveness. Please contact me if you find any issues.

block after_body
	div#searchResultTemplate.hide.panel.panel-default
		div.panel-heading
			h1#title.panel-title.pull-left
			button#button.btn.btn-success.glyphicon.glyphicon-plus.pull-right.btn-add-course(type='button', style='line-height: 1!important;', data-search='true')
			div.clearfix
		div.panel-body
	div#subj-list-template2.hide.panel.panel-default
		div.panel-heading
			h1#title.panel-title.pull-left.collapse-btn-subj
			button#button.btn.btn-success.glyphicon.glyphicon-plus.pull-right.btn-add-course(type='button', style='line-height: 1!important;', data-search='true')
			div.clearfix.collapse-btn-subj
		div.panel-collapse.collapse.panel-body.subj-list-collapse
	li#addedTemplate.hide.list-group-item
	button#basket-remove.hide.btn.btn-danger.glyphicon.glyphicon-minus.btn-remove-course.pull-right(type='button', style='line-height: 1!important;')

	script(src="public/js/homepageFunctions.min.js" integrity="#{homepageFunctionsMinCheck}")
