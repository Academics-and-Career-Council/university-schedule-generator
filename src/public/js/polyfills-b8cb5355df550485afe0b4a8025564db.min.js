/*! For detailed credits and licence information see https://github.com/financial-times/polyfill-service */
function CreateMethodProperty(t,e,r){var n={value:r,writable:!0,enumerable:!1,configurable:!0};Object.defineProperty(t,e,n)}function RequireObjectCoercible(t){if(null===t||void 0===t)throw TypeError();return t}function ToString(t){switch(Type(t)){case"symbol":throw new TypeError("Cannot convert a Symbol value to a string");case"object":return ToString(ToPrimitive(t,"string"));default:return String(t)}}function IsRegExp(t){if("object"!==Type(t))return!1;var e="Symbol"in this&&"match"in this.Symbol?Get(t,this.Symbol.match):void 0;if(void 0!==e)return ToBoolean(e);try{var r=t.lastIndex;return t.lastIndex=0,RegExp.prototype.exec.call(t),!0}catch(t){}finally{t.lastIndex=r}return!1}function ToInteger(t){var e=Number(t);return isNaN(e)?0:0===e||-0===e||e===1/0||e===-1/0?e:(e<0?-1:1)*Math.floor(Math.abs(e))}function ToPrimitive(t){var e=arguments.length>1?arguments[1]:void 0;if("object"===Type(t)){if(arguments.length<2)var r="default";else e===String?r="string":e===Number&&(r="number");var n="function"==typeof this.Symbol&&"symbol"==typeof this.Symbol.toPrimitive?GetMethod(t,this.Symbol.toPrimitive):void 0;if(void 0!==n){var o=Call(n,t,[r]);if("object"!==Type(o))return o;throw new TypeError("Cannot convert exotic object to primitive.")}return"default"===r&&(r="number"),OrdinaryToPrimitive(t,r)}return t}function Type(t){switch(typeof t){case"undefined":return"undefined";case"boolean":return"boolean";case"number":return"number";case"string":return"string";case"symbol":return"symbol";default:return null===t?"null":"Symbol"in this&&t instanceof this.Symbol?"symbol":"object"}}function Call(t,e){var r=arguments.length>2?arguments[2]:[];if(!1===IsCallable(t))throw new TypeError(Object.prototype.toString.call(t)+"is not a function.");return t.apply(e,r)}function GetMethod(t,e){var r=GetV(t,e);if(null!==r&&void 0!==r){if(!1===IsCallable(r))throw new TypeError("Method not callable: "+e);return r}}function OrdinaryToPrimitive(t,e){if("string"===e)var r=["toString","valueOf"];else r=["valueOf","toString"];for(var n=0;n<r.length;++n){var o=Get(t,r[n]);if(IsCallable(o)){var i=Call(o,t);if("object"!==Type(i))return i}}throw new TypeError("Cannot convert to primitive.")}function GetV(t,e){return ToObject(t)[e]}function IsCallable(t){return"function"==typeof t}function ToObject(t){if(null===t||void 0===t)throw TypeError();return Object(t)}function ToBoolean(t){return Boolean(t)}function Get(t,e){return t[e]}CreateMethodProperty(String.prototype,"includes",function(t){"use strict";var e=arguments.length>1?arguments[1]:void 0,r=ToString(RequireObjectCoercible(this));if(IsRegExp(t))throw new TypeError("First argument to String.prototype.includes must not be a regular expression");var n=ToString(t),o=ToInteger(e),i=r.length,l=Math.min(Math.max(o,0),i);return-1!==String.prototype.indexOf.call(r,n,l)});
//# sourceMappingURL=polyfills-b8cb5355df550485afe0b4a8025564db.min.js.map