/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/public/js/scheduleViewerFunctions.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/public/js/scheduleViewerFunctions.js":
/*!**************************************************!*\
  !*** ./src/public/js/scheduleViewerFunctions.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createPopover = function createPopover(element) {
    element = $(element);

    var htmlEncode = function htmlEncode(value) {
        return $("<div/>").text(value).html();
    };

    var coursenum = htmlEncode(element.data('coursenum'));
    var fos = htmlEncode(element.data('fos'));
    var prof = htmlEncode(element.data('prof'));
    var crns = element.data('crns');
    var coursetitle = htmlEncode(element.data('coursetitle'));
    var html = '<p> ' + fos + ' ' + coursenum + ' with CRN: ' + crns + '</p><p>Professor: ' + prof + '</p>';
    if (element.data('prereg') == "1") {
        html = html + "<p>You have already registered for this course</p>";
    }
    var options = { placement: 'bottom', container: "body", trigger: 'manual', html: true, title: coursetitle };
    element.data('content', html).popover(options);
};

$('table').on('mouseenter', 'td.has-data', function (e) {
    var td = $(e.target);
    setTimeout(function () {
        td.popover('show');
    }, 200);
}).on('mouseleave', 'td.has-data', function (e) {
    var td = $(e.target);
    setTimeout(function () {
        if (!$(".popover:hover").length) {
            $(td).popover('hide');
        }
    }, 200);
});

$('td.has-data').toArray().forEach(createPopover);

$(document).ready(function () {
    $('[data-toggle="tooltip"]').tooltip();

    $(document).on('mouseleave', ".popover", function (e) {
        setTimeout(function () {
            if (!$(".popover:hover").length) {
                $(e.target).closest(".popover").remove();
            }
        }, 300);
    });
});

/***/ })

/******/ });
//# sourceMappingURL=scheduleViewerFunctions-a8a82b5ffeb0c6a3066c.min.js.map