/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/public/js/progressLoaderFunctions.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/public/js/progressLoaderFunctions.js":
/*!**************************************************!*\
  !*** ./src/public/js/progressLoaderFunctions.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createListeners = function createListeners() {
    var getCollapses = function getCollapses(expanded) {
        if (expanded) {
            return $('.collapse.in').not('.navbar-collapse').toArray();
        }
        return $('.collapse:not(.in)').not('.navbar-collapse').toArray();
    };

    $(document).on("click", ".btn-expand", function (e) {
        getCollapses(false).forEach(function (v) {
            $(v).addClass("in");
        });
        $(e.target).text(' Collapse All Schedules').removeClass("glyphicon-collapse-down btn-expand").addClass("glyphicon-collapse-up btn-collapse");
    });

    $(document).on("click", ".btn-collapse", function (e) {
        getCollapses(false).forEach(function (v) {
            $(v).collapse("toggle");
        });
        getCollapses(true).forEach(function (v) {
            $(v).removeClass("in");
        });
        $(e.target).text(' Expand All Schedules').addClass("glyphicon-collapse-down btn-expand").removeClass("glyphicon-collapse-up btn-collapse");
    });

    $(document).on("click", ".btn-calview", function (e) {
        $(e.target).text(' List View').addClass("glyphicon-list btn-listview").removeClass("glyphicon-calendar btn-calview");
        $('#list-view').addClass("hide");
        $('#calendar-view').removeClass("hide");
    });

    $(document).on("click", ".btn-listview", function (e) {
        $(e.target).text(' Calendar View').removeClass("glyphicon-list btn-listview").addClass("glyphicon-calendar btn-calview");
        $('#list-view').removeClass("hide");
        $('#calendar-view').addClass("hide");
    });
};

$(document).ready(function () {
    $('[data-toggle="popover"]').popover();
    createListeners();
});

var getParameterByName = function getParameterByName(name, url) {
    if (!url) {
        url = window.location.href;
    }
    name = name.replace(/[\\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);
    if (!results) {
        return null;
    }
    if (!results[2]) {
        return '';
    }
    return results[2].replace(/\\+/g, " ");
};

window.getParameterByName = getParameterByName;

var makeProgress = function makeProgress(count) {
    var customElement = $("<img src='loading-spinner.gif' /><h3>", {
        id: "countdown",
        text: ""
    });

    var makeFunnyWord = function makeFunnyWord() {
        var random = [["Recalibrating", "Excavating", "Acquiring", "Extracting", "Computing", "Deflummoxing", "Binding", "Serving", "Routing", "Distributing", "Sampling", "Servicing", "Repairing", "Discombobulating", "Processing", "Preprocessing"], ["Flux", "Data", "Spline", "Storage", "Plasma", "Cache", "Laser", "Extra Large", "Ethernet", "WiFi", "Wireless", "Sample", "Computational", "Local", "Integral"], ["Capacitor", "Conductor", "Assembler", "Detector", "Post-processor", "Integrator", "Computer", "Disk", "Server", "Router", "Calculator"]];

        var verb = random[0][Math.floor(Math.random() * random[0].length)];
        var adjective = random[1][Math.floor(Math.random() * random[1].length)];
        var noun = random[2][Math.floor(Math.random() * random[2].length)];
        return verb + " " + adjective + " " + noun;
    };

    var sensible = ["Sending Data to Server", "Processing", "Making Schedules", "Wrangling Bits", "A Few Bits Tried to Escape, but We Caught Them", "It's Still Faster Than You Could Do It", "Counting Down from Inifinity", "Reticulating Splines", "Searching for the Answer to Life, the Universe, and Everything", "Checking Gravitational Constant in Your Locale"];

    customElement.text(sensible[0]);
    $("#results").LoadingOverlay("show", {
        minSize: "200px",
        size: "100%",
        custom: customElement,
        image: ""
    });

    var ptr = 0;
    var writer = '';

    var interval = setInterval(function () {
        count--;
        if (count > 10 && count % 5 === 4 && ptr < sensible.length) {
            writer = sensible[ptr++];
            customElement.text(writer);
        } else if (count > 10 && count % 5 === 4 && ptr >= sensible.length) {
            writer = makeFunnyWord();
            customElement.text(writer);
        } else if (count <= 10 && count > 0) {
            writer = "Maximum Execution Time Almost Complete " + count + " Seconds Remain";
            customElement.text(writer);
        } else if (count <= 0) {
            clearInterval(interval);
        }
    }, 1000);

    $.ajax({
        url: 'newSched.php',
        type: 'GET',
        data: { "i": getParameterByName("i") },
        dataType: 'html',
        timeout: count * 1000 + 5000,
        cache: false,
        success: function success(data) {
            $('#results').html(data).LoadingOverlay("hide");
            clearInterval(interval);
        },
        error: function error(e) {
            console.log(e);
            clearInterval(interval);
            if (e.status === 404 || e.status === 500 || e.statusText === "timeout") {
                $("#results").LoadingOverlay("hide").html("<div style=\"text-align: center;\">" + "<h2>Execution Time Exceeded</h2><h3>Try Again with Fewer Courses</h3>" + "</div>");
            } else {
                alert("Something went wrong!");
            }
        }
    });
};

window.makeProgress = makeProgress;

/***/ })

/******/ });
//# sourceMappingURL=progressLoaderFunctions-a8a82b5ffeb0c6a3066c.min.js.map